#!/bin/ash
# Copyright 2007-2008 Mike Kelly <pioto@pioto.org>
# Released under the terms of the GNU General Public License v2
#
# Based upon a script from: http://www.disciplina.net/howto/initscript
#
# Modified by Greg Fitzgerald <netzdamon@gmail.com>

# Basic configuration
PATH="/bin:/sbin:/usr/bin:/usr/sbin"
root="/dev/mapper/Betsy-root"
key_drive="/dev/sdc1"
key_location="/mnt"
key_name="key.gpg"
init="/sbin/init"
debug=false
modules="dm-crypt dm-mod serpent sha256 blowfish" #Any modules you might need to load

# Include our functions
. /lib/scripts/functions.sh


mount -n -t proc none /proc
mount -n -t sysfs none /sys

CMDLINE=`cat /proc/cmdline`

for param in $CMDLINE ; do
	case "$param" in
		root=*|init=*)
			eval "$param"
			;;
		rescue)
			rescue="y"
			;;
	esac
done

if [ -z "$root" ]; then
    eerror "No root filesystem specified"
    eerror "Please append a correct \"root=\" boot option"
    eerror "Dropping you to a limited shell."
    eerror "press CTRL-ALT-Del for reboot"
    exec /bin/sh 
fi

#Disable kernel messages from popping onto the screen
echo 0 > /proc/sys/kernel/printk

#Clear the screen
clear

einfo "Initramfs booting..."

# populate /dev with meaningful stuff
einfo "Scanning for device nodes..."
echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

# Load modules if you are using them.
einfo "Loading any necessary modules."
for i in $modules;
do 
    modprobe $i >/dev/null 2>&1
done

# raid
#mdadm --assemble /dev/md2 /dev/sda2 /dev/sdb2

waitfor_drives /dev/sdc1 /dev/sda2 /dev/sdb1

# Mount our usb key drive
einfo "Mounting key drive..."
if [ -b "${key_drive}" ]
then
    mount -o ro $key_drive $key_location 
else
    askfor_key
fi

if $debug; then
    einfo "Testing key drive..."
    # Make a real test this is going to pass either way since /usb is already
    # created.
    touch /usb/it_got_mounted || eerror "unable to write to usb key, not being mounted"
fi

# now, we decrypt our lvm pv
einfo "Decrypting /dev/sda2..."
#/sbin/cryptsetup luksOpen /dev/sda2 sda2_crypt 
/sbin/cryptsetup --key-file ${key_location}/${key_name} luksOpen /dev/sda2 sda2_crypt || askfor_key
einfo "Decryption /dev/sdb1..."
/sbin/cryptsetup --key-file ${key_location}/${key_name} luksOpen /dev/sdb1 sdb1_storage || askfor_key

einfo "Finding lvm devices..."
/sbin/vgscan --mknodes
einfo "Activating lvm devices..."
/sbin/vgchange -a y

# Umount key drive
einfo "Ejecting key drive..."
umount -f $key_location

einfo "Mounting root device: $root ..."
mount -n -t ext3 $root /root -o ro

if [ -n "$rescue" ]; then
	ewarn "\"rescue\" kernel parameter received."
	ewarn "Going to a rescue shell..."
	exec /bin/sh
fi

einfo "Unmounting /sys and /proc ..."
umount -f /sys /proc 

einfo "Changing to $root and handing over to init..."
exec switch_root -c /dev/console /root "$init" "$@"

# vim: set ft=sh tw=78:
